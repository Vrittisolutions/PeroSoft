package com.vritti.petrosoft;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.content.res.Resources;
import android.graphics.drawable.BitmapDrawable;
import android.os.Bundle;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.Window;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.CompoundButton;
import android.widget.CompoundButton.OnCheckedChangeListener;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.Toast;

import com.squareup.picasso.Picasso;
import com.vritti.common.CommonUtilities;
import com.vritti.common.PetroSoftData;
import com.vritti.database.DatabaseHelper;

import java.io.File;

public class RegisterIpActivity extends Activity {
	private Context parent;
	private EditText edittextIp;
	private Button buttonRegister;
	private DatabaseHelper databaseHelper;
	private CheckBox checkboxop;
	private String ip;
	ImageView ivlogo;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		this.requestWindowFeature(Window.FEATURE_NO_TITLE);
		setContentView(R.layout.activity_url);
		initViews();
		setListeners();
	}

	private void checkDBforIPAddresses() {
		// TODO Auto-generated method stub
		PetroSoftData.IP = CommonUtilities.getIp(parent);
		//PetroSoftData.isOperator = CommonUtilities.getIsOperator(parent);
		
		if (PetroSoftData.IP != null 
				//&& PetroSoftData.isOperator != null
				) {
			PetroSoftData.URL = "http://" + PetroSoftData.IP + "/Petrosoft/Service1.asmx?wsdl";
			startActivity(new Intent(parent, LoginActivity.class));
			finish();

			/* http://192.168.1.93/Petrosoft/Service1.asmx?wsdl */
		}
	}

	private void initViews() {
		parent = RegisterIpActivity.this;

		checkDBforIPAddresses();

		databaseHelper = new DatabaseHelper(parent);

		edittextIp = (EditText) findViewById(R.id.edIpAddress);
		buttonRegister = (Button) findViewById(R.id.btnRegisterIP);
		checkboxop = (CheckBox) findViewById(R.id.isOperator);
		checkboxop.setVisibility(View.GONE);
		ivlogo = (ImageView) findViewById(R.id.iconlogo);

		if(PetroSoftData.urlpath!=null){
            if(PetroSoftData.imgPath!=null){
                Picasso.with(parent).load(PetroSoftData.imgPath)/*
					.placeholder(R.drawable.petro_soft_logo)
					.error(R.drawable.petro_soft_logo)*/
                        .into(ivlogo);
            }
            else{
                ivlogo.setImageResource(R.drawable.petro_soft_logo);
            }
        }else {

        }
	}

	private void setListeners() {
		buttonRegister.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View v) {
				ip = edittextIp.getText().toString();
				saveIpToDb();
				/*if (checkboxop.isChecked()) {
	    	        Toast.makeText(RegisterIpActivity.this,"Operator Checked", Toast.LENGTH_LONG).show();
	    	        PetroSoftData.isOperator = "Operator";
	    	        saveOperatorToDb();
	    	    }else if (!checkboxop.isChecked()){
   		    	        Toast.makeText(RegisterIpActivity.this,"NotOperator Checked", Toast.LENGTH_LONG).show();
   		    	        PetroSoftData.isOperator = "NotOperator";
   		    	        saveOperatorToDb();
   		    	}*/

				checkDBforIPAddresses();
				/*
				startActivity(new Intent(parent, LoginActivity.class));
				finish();*/
			}
		});
		
		/*checkboxop.setOnClickListener(new View.OnClickListener() {
		    @Override
		    public void onClick(View v) {
		        //Log.i(TAG, String.format("checkbox onClick, isSelected: %s, identityHashCode: %s", checkBox.isSelected(), System.identityHashCode(checkBox)));
		    	 if (((CheckBox) v).isChecked()) {
		    	        Toast.makeText(RegisterIpActivity.this,"Operator Checked", Toast.LENGTH_LONG).show();
		    	        PetroSoftData.isOperator = "Operator";
		    	    }
		    }
		});*/
		
		/*checkboxop.setOnCheckedChangeListener(new OnCheckedChangeListener() {

            @Override
            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                // TODO Auto-generated method stub

            	if (checkboxop.isChecked()) {
	    	        Toast.makeText(RegisterIpActivity.this,"Operator Checked", Toast.LENGTH_LONG).show();
	    	        PetroSoftData.isOperator = "Operator";
	    	        saveOperatorToDb();
	    	    }else if (!checkboxop.isChecked()){
   		    	        Toast.makeText(RegisterIpActivity.this,"NotOperator Checked", Toast.LENGTH_LONG).show();
   		    	        PetroSoftData.isOperator = "NotOperator";
   		    	        saveOperatorToDb();
   		    	}
            }
            });
*/

	}

	protected void saveIpToDb() {
		CommonUtilities.clearTable(parent, "IPAddress");
		databaseHelper.AddIPAddress(ip);
	}
	
	protected void saveOperatorToDb() {
		CommonUtilities.clearTable(parent, "IsOperator");
		databaseHelper.AddOperator(PetroSoftData.isOperator);
	}
	
	
}